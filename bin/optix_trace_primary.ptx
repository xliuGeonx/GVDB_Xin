//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z13trace_primaryv
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 cam_pos[12];
.global .align 4 .b8 cam_U[12];
.global .align 4 .b8 cam_V[12];
.global .align 4 .b8 cam_S[12];
.global .align 4 .b8 bad_color[12];
.global .align 4 .f32 scene_epsilon;
.global .align 4 .u32 sample;
.global .align 1 .b8 output_buffer[1];
.global .align 4 .b8 top_object[4];
.global .align 1 .b8 rnd_seeds[1];
.global .align 8 .b8 launch_index[8];
.global .align 8 .b8 launch_dim[8];
.global .align 4 .b8 _ZN21rti_internal_typeinfo7cam_posE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_UE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_VE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5cam_SE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9bad_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6sampleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10top_objectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12launch_indexE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10launch_dimE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7cam_posE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5cam_UE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5cam_VE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename5cam_SE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9bad_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6sampleE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10top_objectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12launch_indexE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10launch_dimE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7cam_posE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_UE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_VE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5cam_SE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9bad_colorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6sampleE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10top_objectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12launch_indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10launch_dimE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic7cam_posE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_UE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_VE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic5cam_SE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9bad_colorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic6sampleE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10top_objectE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic12launch_indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10launch_dimE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation7cam_posE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_UE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_VE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation5cam_SE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9bad_colorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6sampleE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10top_objectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12launch_indexE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10launch_dimE[1];
.global .align 16 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};
.global .align 16 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};
.global .align 16 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 16 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str19[40] = {69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 48, 120, 37, 88, 32, 97, 116, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 40, 37, 100, 44, 37, 100, 41, 10, 0};

.visible .entry _Z13trace_primaryv(

)
{
	.local .align 4 .b8 	__local_depot0[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .f32 	%f<104>;
	.reg .b32 	%r<50>;
	.reg .b64 	%rd<40>;


	mov.u64 	%rd39, __local_depot0;
	cvta.local.u64 	%SP, %rd39;
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd4;
	ld.global.v2.u32 	{%r1, %r2}, [launch_index];
	cvt.u64.u32	%rd6, %r2;
	cvt.u64.u32	%rd7, %r1;
	cvt.rn.f32.u32	%f5, %r1;
	cvt.rn.f32.u32	%f6, %r2;
	ld.global.v2.u32 	{%r5, %r6}, [launch_dim];
	cvt.rn.f32.u32	%f7, %r5;
	cvt.rn.f32.u32	%f8, %r6;
	div.approx.ftz.f32 	%f9, %f5, %f7;
	div.approx.ftz.f32 	%f10, %f6, %f8;
	ld.global.f32 	%f11, [cam_U];
	ld.global.f32 	%f12, [cam_U+4];
	mul.ftz.f32 	%f13, %f12, %f12;
	fma.rn.ftz.f32 	%f14, %f11, %f11, %f13;
	ld.global.f32 	%f15, [cam_U+8];
	fma.rn.ftz.f32 	%f16, %f15, %f15, %f14;
	sqrt.approx.ftz.f32 	%f17, %f16;
	div.approx.ftz.f32 	%f1, %f17, %f7;
	add.s64 	%rd1, %rd5, 12;
	mov.u32 	%r9, 0;
	st.local.u32 	[%rd5+12], %r9;
	mov.u32 	%r10, 1065353216;
	st.local.u32 	[%rd5+16], %r10;
	mov.u64 	%rd8, 0;
	st.local.u32 	[%rd5+24], %rd8;
	st.local.u32 	[%rd5+20], %rd8;
	ld.global.u32 	%r11, [sample];
	setp.lt.u32	%p1, %r11, 2;
	and.b64  	%rd2, %rd7, 127;
	and.b64  	%rd3, %rd6, 127;
	ld.global.f32 	%f18, [cam_V];
	mul.ftz.f32 	%f19, %f10, %f18;
	ld.global.f32 	%f20, [cam_V+4];
	mul.ftz.f32 	%f21, %f10, %f20;
	ld.global.f32 	%f22, [cam_V+8];
	mul.ftz.f32 	%f23, %f10, %f22;
	fma.rn.ftz.f32 	%f24, %f9, %f11, %f19;
	fma.rn.ftz.f32 	%f25, %f9, %f12, %f21;
	fma.rn.ftz.f32 	%f26, %f9, %f15, %f23;
	ld.global.f32 	%f27, [cam_S];
	add.ftz.f32 	%f2, %f24, %f27;
	ld.global.f32 	%f28, [cam_S+4];
	add.ftz.f32 	%f3, %f25, %f28;
	ld.global.f32 	%f29, [cam_S+8];
	add.ftz.f32 	%f4, %f26, %f29;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	mov.u64 	%rd31, rnd_seeds;
	cvta.global.u64 	%rd25, %rd31;
	mov.u32 	%r32, 2;
	mov.u32 	%r33, 4;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r32, %r33, %rd2, %rd3, %rd8, %rd8);
	// inline asm
	ld.u32 	%r37, [%rd24];
	mad.lo.s32 	%r38, %r37, 1664525, 1013904223;
	and.b32  	%r39, %r38, 16777215;
	cvt.rn.f32.u32	%f78, %r39;
	mov.f32 	%f79, 0f4B800000;
	div.approx.ftz.f32 	%f80, %f78, %f79;
	add.ftz.f32 	%f81, %f80, 0fBF000000;
	mad.lo.s32 	%r40, %r38, 1664525, 1013904223;
	and.b32  	%r41, %r40, 16777215;
	cvt.rn.f32.u32	%f82, %r41;
	div.approx.ftz.f32 	%f83, %f82, %f79;
	add.ftz.f32 	%f84, %f83, 0fBF000000;
	mad.lo.s32 	%r42, %r40, 1664525, 7271263;
	and.b32  	%r43, %r42, 16777215;
	cvt.rn.f32.u32	%f85, %r43;
	div.approx.ftz.f32 	%f86, %f85, %f79;
	add.ftz.f32 	%f87, %f86, 0fBF000000;
	fma.rn.ftz.f32 	%f88, %f1, %f81, %f2;
	fma.rn.ftz.f32 	%f89, %f1, %f84, %f3;
	fma.rn.ftz.f32 	%f90, %f1, %f87, %f4;
	mul.ftz.f32 	%f91, %f89, %f89;
	fma.rn.ftz.f32 	%f92, %f88, %f88, %f91;
	fma.rn.ftz.f32 	%f93, %f90, %f90, %f92;
	rsqrt.approx.ftz.f32 	%f94, %f93;
	mul.ftz.f32 	%f73, %f88, %f94;
	mul.ftz.f32 	%f74, %f89, %f94;
	mul.ftz.f32 	%f75, %f94, %f90;
	ld.global.f32 	%f72, [cam_pos+8];
	ld.global.f32 	%f71, [cam_pos+4];
	ld.global.f32 	%f70, [cam_pos];
	ld.global.u32 	%r34, [top_object];
	mov.f32 	%f76, 0f00000000;
	mov.f32 	%f77, 0f6C4ECB8F;
	mov.u32 	%r36, 28;
	// inline asm
	call _rt_trace_64, (%r34, %f70, %f71, %f72, %f73, %f74, %f75, %r9, %f76, %f77, %rd4, %r36);
	// inline asm
	ld.local.f32 	%f95, [%rd1+-12];
	add.ftz.f32 	%f96, %f95, 0f00000000;
	ld.local.f32 	%f97, [%rd1+-8];
	add.ftz.f32 	%f98, %f97, 0f00000000;
	ld.local.f32 	%f99, [%rd1+-4];
	add.ftz.f32 	%f100, %f99, 0f00000000;
	st.local.f32 	[%rd1+-4], %f100;
	st.local.f32 	[%rd1+-8], %f98;
	st.local.f32 	[%rd1+-12], %f96;
	bra.uni 	BB0_3;

BB0_1:
	mov.u64 	%rd22, rnd_seeds;
	cvta.global.u64 	%rd10, %rd22;
	mov.u32 	%r17, 2;
	mov.u32 	%r13, 4;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r17, %r13, %rd2, %rd3, %rd8, %rd8);
	// inline asm
	ld.u32 	%r19, [%rd9];
	mad.lo.s32 	%r20, %r19, 1664525, 1013904223;
	and.b32  	%r21, %r20, 16777215;
	cvt.rn.f32.u32	%f38, %r21;
	mov.f32 	%f39, 0f4B800000;
	div.approx.ftz.f32 	%f40, %f38, %f39;
	add.ftz.f32 	%f41, %f40, 0fBF000000;
	mad.lo.s32 	%r22, %r20, 1664525, 1013904223;
	and.b32  	%r23, %r22, 16777215;
	cvt.rn.f32.u32	%f42, %r23;
	div.approx.ftz.f32 	%f43, %f42, %f39;
	add.ftz.f32 	%f44, %f43, 0fBF000000;
	mad.lo.s32 	%r24, %r22, 1664525, 7271263;
	and.b32  	%r25, %r24, 16777215;
	cvt.rn.f32.u32	%f45, %r25;
	div.approx.ftz.f32 	%f46, %f45, %f39;
	add.ftz.f32 	%f47, %f46, 0fBF000000;
	fma.rn.ftz.f32 	%f48, %f1, %f41, %f2;
	fma.rn.ftz.f32 	%f49, %f1, %f44, %f3;
	fma.rn.ftz.f32 	%f50, %f1, %f47, %f4;
	mul.ftz.f32 	%f51, %f49, %f49;
	fma.rn.ftz.f32 	%f52, %f48, %f48, %f51;
	fma.rn.ftz.f32 	%f53, %f50, %f50, %f52;
	rsqrt.approx.ftz.f32 	%f54, %f53;
	mul.ftz.f32 	%f33, %f48, %f54;
	mul.ftz.f32 	%f34, %f49, %f54;
	mul.ftz.f32 	%f35, %f54, %f50;
	ld.global.f32 	%f32, [cam_pos+8];
	ld.global.f32 	%f31, [cam_pos+4];
	ld.global.f32 	%f30, [cam_pos];
	ld.global.u32 	%r14, [top_object];
	mov.f32 	%f36, 0f00000000;
	mov.f32 	%f37, 0f6C4ECB8F;
	mov.u32 	%r16, 28;
	// inline asm
	call _rt_trace_64, (%r14, %f30, %f31, %f32, %f33, %f34, %f35, %r9, %f36, %f37, %rd4, %r16);
	// inline asm
	ld.global.v2.u32 	{%r26, %r27}, [launch_index];
	cvt.u64.u32	%rd18, %r26;
	cvt.u64.u32	%rd19, %r27;
	mov.u64 	%rd23, output_buffer;
	cvta.global.u64 	%rd17, %rd23;
	mov.u32 	%r18, 12;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r17, %r18, %rd18, %rd19, %rd8, %rd8);
	// inline asm
	ld.global.u32 	%r30, [sample];
	add.s32 	%r31, %r30, -1;
	cvt.rn.f32.u32	%f55, %r31;
	ld.f32 	%f56, [%rd16];
	ld.f32 	%f57, [%rd16+4];
	ld.f32 	%f58, [%rd16+8];
	ld.local.f32 	%f59, [%rd1+-12];
	fma.rn.ftz.f32 	%f60, %f56, %f55, %f59;
	ld.local.f32 	%f61, [%rd1+-8];
	fma.rn.ftz.f32 	%f62, %f57, %f55, %f61;
	ld.local.f32 	%f63, [%rd1+-4];
	fma.rn.ftz.f32 	%f64, %f55, %f58, %f63;
	cvt.rn.f32.u32	%f65, %r30;
	rcp.approx.ftz.f32 	%f66, %f65;
	mul.ftz.f32 	%f67, %f60, %f66;
	mul.ftz.f32 	%f68, %f62, %f66;
	mul.ftz.f32 	%f69, %f64, %f66;
	st.local.f32 	[%rd1+-4], %f69;
	st.local.f32 	[%rd1+-8], %f68;
	st.local.f32 	[%rd1+-12], %f67;

BB0_3:
	ld.global.v2.u32 	{%r46, %r47}, [launch_index];
	cvt.u64.u32	%rd34, %r46;
	cvt.u64.u32	%rd35, %r47;
	mov.u64 	%rd38, output_buffer;
	cvta.global.u64 	%rd33, %rd38;
	mov.u32 	%r44, 2;
	mov.u32 	%r45, 12;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r44, %r45, %rd34, %rd35, %rd8, %rd8);
	// inline asm
	ld.local.f32 	%f101, [%rd1+-12];
	ld.local.f32 	%f102, [%rd1+-8];
	ld.local.f32 	%f103, [%rd1+-4];
	st.f32 	[%rd32+8], %f103;
	st.f32 	[%rd32+4], %f102;
	st.f32 	[%rd32], %f101;
	ret;
}

	// .globl	_Z9exceptionv
.visible .entry _Z9exceptionv(

)
{
	.local .align 16 .b8 	__local_depot1[224];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<40>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<95>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<106>;


	mov.u64 	%rd105, __local_depot1;
	cvta.local.u64 	%SP, %rd105;
	add.u64 	%rd16, %SP, 96;
	cvta.to.local.u64 	%rd1, %rd16;
	add.u64 	%rd17, %SP, 184;
	cvta.to.local.u64 	%rd18, %rd17;
	// inline asm
	call (%r39), _rt_get_exception_code, ();
	// inline asm
	ld.global.v2.u32 	{%r41, %r42}, [launch_index];
	add.u64 	%rd19, %SP, 200;
	cvta.to.local.u64 	%rd20, %rd19;
	st.local.v2.u32 	[%rd20], {%r39, %r41};
	st.local.u32 	[%rd20+8], %r42;
	mov.u64 	%rd21, $str19;
	cvta.global.u64 	%rd22, %rd21;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd19;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 0
	// inline asm
	call (%r40), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r40, 1020;
	add.s64 	%rd2, %rd18, 4;
	@%p1 bra 	BB1_58;
	bra.uni 	BB1_1;

BB1_58:
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p39, %r86, 0;
	@%p39 bra 	BB1_60;

	st.local.u32 	[%rd18], %r36;
	st.local.u32 	[%rd2], %r37;
	st.local.u32 	[%rd2+4], %r38;
	mov.u64 	%rd94, $str;
	cvta.global.u64 	%rd95, %rd94;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd95;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 19
	bra.uni 	BB1_60;

BB1_1:
	setp.eq.s32	%p2, %r40, 1021;
	@%p2 bra 	BB1_52;
	bra.uni 	BB1_2;

BB1_52:
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd104, 1;
	setp.lt.u32	%p36, %r30, 2;
	mov.u64 	%rd103, %rd104;
	@%p36 bra 	BB1_54;

	ld.volatile.global.u64 	%rd103, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB1_54:
	setp.lt.u32	%p37, %r30, 3;
	@%p37 bra 	BB1_56;

	ld.volatile.global.u64 	%rd104, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB1_56:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd13, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r84), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r84, 0;
	@%p38 bra 	BB1_60;

	st.local.u32 	[%rd1], %r31;
	st.local.u32 	[%rd1+4], %r32;
	st.local.u32 	[%rd1+8], %r33;
	st.local.u32 	[%rd1+24], %r34;
	st.local.u32 	[%rd1+56], %r35;
	st.local.u64 	[%rd1+16], %rd7;
	st.local.u64 	[%rd1+32], %rd8;
	st.local.u64 	[%rd1+40], %rd103;
	st.local.u64 	[%rd1+48], %rd104;
	st.local.u64 	[%rd1+64], %rd13;
	st.local.u64 	[%rd1+72], %rd14;
	st.local.u64 	[%rd1+80], %rd15;
	mov.u64 	%rd90, $str1;
	cvta.global.u64 	%rd91, %rd90;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd91;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r85, [retval0+0];
	
	//{
	}// Callseq End 18

BB1_60:
	ld.global.v2.u32 	{%r90, %r91}, [launch_index];
	cvt.u64.u32	%rd98, %r90;
	cvt.u64.u32	%rd99, %r91;
	mov.u64 	%rd102, output_buffer;
	cvta.global.u64 	%rd97, %rd102;
	mov.u32 	%r88, 2;
	mov.u32 	%r89, 12;
	mov.u64 	%rd101, 0;
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd97, %r88, %r89, %rd98, %rd99, %rd101, %rd101);
	// inline asm
	ld.global.f32 	%f9, [bad_color];
	ld.global.f32 	%f10, [bad_color+4];
	ld.global.f32 	%f11, [bad_color+8];
	st.f32 	[%rd96+8], %f11;
	st.f32 	[%rd96+4], %f10;
	st.f32 	[%rd96], %f9;
	ret;

BB1_2:
	setp.eq.s32	%p3, %r40, 1006;
	@%p3 bra 	BB1_41;
	bra.uni 	BB1_3;

BB1_41:
	// inline asm
	call (%r75), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r75, 0;
	@%p29 bra 	BB1_43;

	mov.u64 	%rd73, $str2;
	cvta.global.u64 	%rd74, %rd73;
	mov.u64 	%rd75, 0;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd74;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd75;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r76, [retval0+0];
	
	//{
	}// Callseq End 14

BB1_43:
	ld.volatile.global.u32 	%r77, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p30, %r77, 0;
	@%p30 bra 	BB1_50;

	setp.eq.s32	%p31, %r77, 1;
	@%p31 bra 	BB1_48;
	bra.uni 	BB1_45;

BB1_48:
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r80), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p34, %r80, 0;
	@%p34 bra 	BB1_60;

	add.u64 	%rd79, %SP, 88;
	cvta.to.local.u64 	%rd80, %rd79;
	st.local.u32 	[%rd80], %r29;
	mov.u64 	%rd81, $str4;
	cvta.global.u64 	%rd82, %rd81;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd79;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r81, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB1_60;

BB1_3:
	setp.eq.s32	%p4, %r40, 1007;
	@%p4 bra 	BB1_30;
	bra.uni 	BB1_4;

BB1_30:
	// inline asm
	call (%r66), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p22, %r66, 0;
	@%p22 bra 	BB1_32;

	mov.u64 	%rd58, $str6;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd60;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r67, [retval0+0];
	
	//{
	}// Callseq End 10

BB1_32:
	ld.volatile.global.u32 	%r68, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p23, %r68, 0;
	@%p23 bra 	BB1_39;

	setp.eq.s32	%p24, %r68, 1;
	@%p24 bra 	BB1_37;
	bra.uni 	BB1_34;

BB1_37:
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r71), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p27, %r71, 0;
	@%p27 bra 	BB1_60;

	add.u64 	%rd65, %SP, 72;
	cvta.to.local.u64 	%rd66, %rd65;
	st.local.u32 	[%rd66], %r27;
	mov.u64 	%rd67, $str8;
	cvta.global.u64 	%rd68, %rd67;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd65;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r72, [retval0+0];
	
	//{
	}// Callseq End 12
	bra.uni 	BB1_60;

BB1_4:
	setp.eq.s32	%p5, %r40, 1018;
	@%p5 bra 	BB1_19;
	bra.uni 	BB1_5;

BB1_19:
	// inline asm
	call (%r57), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r57, 0;
	@%p15 bra 	BB1_21;

	mov.u64 	%rd45, $str10;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, 0;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r58, [retval0+0];
	
	//{
	}// Callseq End 6

BB1_21:
	ld.volatile.global.u32 	%r59, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p16, %r59, 0;
	@%p16 bra 	BB1_28;

	setp.eq.s32	%p17, %r59, 1;
	@%p17 bra 	BB1_26;
	bra.uni 	BB1_23;

BB1_26:
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r62), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p20, %r62, 0;
	@%p20 bra 	BB1_60;

	add.u64 	%rd51, %SP, 56;
	cvta.to.local.u64 	%rd52, %rd51;
	st.local.u32 	[%rd52], %r25;
	mov.u64 	%rd53, $str12;
	cvta.global.u64 	%rd54, %rd53;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd54;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r63, [retval0+0];
	
	//{
	}// Callseq End 8
	bra.uni 	BB1_60;

BB1_50:
	// inline asm
	call (%r82), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p35, %r82, 0;
	@%p35 bra 	BB1_60;

	mov.u64 	%rd83, $str3;
	cvta.global.u64 	%rd84, %rd83;
	mov.u64 	%rd85, 0;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd84;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd85;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB1_60;

BB1_45:
	setp.ne.s32	%p32, %r77, 2;
	@%p32 bra 	BB1_60;

	// inline asm
	call (%r78), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p33, %r78, 0;
	@%p33 bra 	BB1_60;

	mov.u64 	%rd76, $str5;
	cvta.global.u64 	%rd77, %rd76;
	mov.u64 	%rd78, 0;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd78;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r79, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB1_60;

BB1_5:
	setp.eq.s32	%p6, %r40, 1019;
	@%p6 bra 	BB1_17;
	bra.uni 	BB1_6;

BB1_17:
	ld.volatile.global.u32 	%r55, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd4, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r54), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r54, 0;
	@%p14 bra 	BB1_60;

	add.u64 	%rd41, %SP, 16;
	cvta.to.local.u64 	%rd42, %rd41;
	st.local.v2.u32 	[%rd42], {%r22, %r23};
	st.local.u32 	[%rd42+8], %r24;
	st.local.u64 	[%rd42+16], %rd4;
	st.local.u64 	[%rd42+24], %rd5;
	st.local.u64 	[%rd42+32], %rd6;
	mov.u64 	%rd43, $str14;
	cvta.global.u64 	%rd44, %rd43;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd41;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r56, [retval0+0];
	
	//{
	}// Callseq End 5
	bra.uni 	BB1_60;

BB1_39:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r73), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p28, %r73, 0;
	@%p28 bra 	BB1_60;

	add.u64 	%rd69, %SP, 80;
	cvta.to.local.u64 	%rd70, %rd69;
	st.local.u32 	[%rd70], %r28;
	mov.u64 	%rd71, $str7;
	cvta.global.u64 	%rd72, %rd71;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd72;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r74, [retval0+0];
	
	//{
	}// Callseq End 13
	bra.uni 	BB1_60;

BB1_34:
	setp.ne.s32	%p25, %r68, 2;
	@%p25 bra 	BB1_60;

	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r69), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p26, %r69, 0;
	@%p26 bra 	BB1_60;

	add.u64 	%rd61, %SP, 64;
	cvta.to.local.u64 	%rd62, %rd61;
	st.local.u32 	[%rd62], %r26;
	mov.u64 	%rd63, $str9;
	cvta.global.u64 	%rd64, %rd63;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd61;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r70, [retval0+0];
	
	//{
	}// Callseq End 11
	bra.uni 	BB1_60;

BB1_6:
	setp.eq.s32	%p7, %r40, 1022;
	@%p7 bra 	BB1_15;
	bra.uni 	BB1_7;

BB1_15:
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r52), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r52, 0;
	@%p13 bra 	BB1_60;

	mov.b32 	 %f1, %r13;
	cvt.ftz.f64.f32	%fd1, %f1;
	mov.b32 	 %f2, %r14;
	cvt.ftz.f64.f32	%fd2, %f2;
	mov.b32 	 %f3, %r15;
	cvt.ftz.f64.f32	%fd3, %f3;
	mov.b32 	 %f4, %r16;
	cvt.ftz.f64.f32	%fd4, %f4;
	mov.b32 	 %f5, %r17;
	cvt.ftz.f64.f32	%fd5, %f5;
	mov.b32 	 %f6, %r18;
	cvt.ftz.f64.f32	%fd6, %f6;
	mov.b32 	 %f7, %r20;
	cvt.ftz.f64.f32	%fd7, %f7;
	mov.b32 	 %f8, %r21;
	cvt.ftz.f64.f32	%fd8, %f8;
	st.local.u32 	[%rd1], %r10;
	st.local.u32 	[%rd1+4], %r11;
	st.local.u32 	[%rd1+8], %r12;
	st.local.u32 	[%rd1+64], %r19;
	st.local.f64 	[%rd1+16], %fd1;
	st.local.f64 	[%rd1+24], %fd2;
	st.local.f64 	[%rd1+32], %fd3;
	st.local.f64 	[%rd1+40], %fd4;
	st.local.f64 	[%rd1+48], %fd5;
	st.local.f64 	[%rd1+56], %fd6;
	st.local.f64 	[%rd1+72], %fd7;
	st.local.f64 	[%rd1+80], %fd8;
	mov.u64 	%rd39, $str15;
	cvta.global.u64 	%rd40, %rd39;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r53, [retval0+0];
	
	//{
	}// Callseq End 4
	bra.uni 	BB1_60;

BB1_28:
	// inline asm
	call (%r64), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p21, %r64, 0;
	@%p21 bra 	BB1_60;

	mov.u64 	%rd55, $str11;
	cvta.global.u64 	%rd56, %rd55;
	mov.u64 	%rd57, 0;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd57;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r65, [retval0+0];
	
	//{
	}// Callseq End 9
	bra.uni 	BB1_60;

BB1_23:
	setp.ne.s32	%p18, %r59, 2;
	@%p18 bra 	BB1_60;

	// inline asm
	call (%r60), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p19, %r60, 0;
	@%p19 bra 	BB1_60;

	mov.u64 	%rd48, $str13;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, 0;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r61, [retval0+0];
	
	//{
	}// Callseq End 7
	bra.uni 	BB1_60;

BB1_7:
	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd24, %rd23;
	setp.eq.s32	%p8, %r40, 1023;
	add.s64 	%rd3, %rd24, 4;
	@%p8 bra 	BB1_13;
	bra.uni 	BB1_8;

BB1_13:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r50), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p12, %r50, 0;
	@%p12 bra 	BB1_60;

	st.local.u32 	[%rd24], %r6;
	st.local.u32 	[%rd3], %r7;
	st.local.v2.u32 	[%rd3+4], {%r8, %r9};
	mov.u64 	%rd35, $str16;
	cvta.global.u64 	%rd36, %rd35;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd36;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r51, [retval0+0];
	
	//{
	}// Callseq End 3
	bra.uni 	BB1_60;

BB1_8:
	add.s32 	%r2, %r40, -1024;
	setp.lt.u32	%p9, %r2, 64512;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p9 bra 	BB1_11;
	bra.uni 	BB1_9;

BB1_11:
	// inline asm
	call (%r48), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p11, %r48, 0;
	@%p11 bra 	BB1_60;

	add.s32 	%r94, %r40, -1024;
	st.local.u32 	[%rd24], %r94;
	st.local.u32 	[%rd3], %r3;
	st.local.v2.u32 	[%rd3+4], {%r4, %r5};
	mov.u64 	%rd31, $str17;
	cvta.global.u64 	%rd32, %rd31;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r49, [retval0+0];
	
	//{
	}// Callseq End 2
	bra.uni 	BB1_60;

BB1_9:
	// inline asm
	call (%r46), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p10, %r46, 0;
	@%p10 bra 	BB1_60;

	st.local.u32 	[%rd18], %r3;
	st.local.u32 	[%rd2], %r4;
	st.local.u32 	[%rd2+4], %r5;
	mov.u64 	%rd27, $str18;
	cvta.global.u64 	%rd28, %rd27;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r47, [retval0+0];
	
	//{
	}// Callseq End 1
	bra.uni 	BB1_60;
}


